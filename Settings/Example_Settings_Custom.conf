%     Example Settings file Example_Settings_Template.conf; BControl system;
%     written by Sebastien Awwad, 2007
%
%     This file contains a few current example custom settings files from
%       Brody lab.
%     I've excluded a few settings that are very specific to things we're
%       doing - for example, those that deal with parsing of our online
%       rat schedule for automatic determination of the next rat to run in
%       each rig.
%     In some cases, defaults are listed in our custom files as well for
%       clarity (to contrast with other rigs).
%
%     THE SETTINGS FILE FORMAT GUIDE AND DESCRIPTIONS OF EACH
%       SETTING ARE AVAILABLE IN THE Settings_Default.conf FILE.
%

%     Note that the custom settings file is not at all limited to the
%       settings in Settings_Default. You can create any settings groups
%       and names you like and check them in your protocol, but if you do,
%       take a look at the wiki (brodylab.princeton.edu/bcontrol) docs and
%       Settings/Settings_Default.m and Modules/Settings.m to learn how to
%       check settings.


%     --------------------------------------------------------------
%     --------------------------------------------------------------
%     Example for rig 3
%     wall #1: 1 XP and 1 Linux (w/ RTLSM) machine per box
%     --------------------------------------------------------------
%     --------------------------------------------------------------

%     All of our custom settings files begin with this include command.
%       It makes it much easier to manage 15 rigs when the settings that
%       are the same on all our rigs are centrally controlled.
%     It's always at the start so that settings in the rest of this file
%       can override included settings.
%     Each rig's custom file then requires no more than the settings
%       specific to that rig. Commentary on the settings in this standard
%       Brody lab settings file is below.
DO_;    INCLUDE;    Settings\Settings_BrodylabRig.conf;

%     On the one-to-one walls, each MATLAB-side machine has total control
%       of the RTLSM's input and output channels. The significance of this
%       setting, specifically, is that it results in the output channel
%       range 0-17 being assigned to this MATLAB machine, even if fewer
%       output channels are actually listed in the channel map.

RIGS; lone_rig;                 1;   % default
%     On the one-to-one walls, rig number X is mapped to Linux server
%       number X. We write only the hostname, but you could use an IP
%       address or full dns (e.g. brodyrigrt03.princeton.edu).
RIGS; state_machine_server;     brodyrigrt03;       % address of machine handling state machine
RIGS; sound_machine_server;     brodyrigrt03;       % address of machine handling sounds

%     --------------------------------------------------------------
%     --------------------------------------------------------------



%     --------------------------------------------------------------
%     --------------------------------------------------------------
%     Settings/BrodylabRig.conf
%     Brody lab general custom settings (included first for all rigs)
%     (lines of interest to other labs only)
%     --------------------------------------------------------------
%     --------------------------------------------------------------

%     Settings_Default.conf documentation covers these just fine.
%     Just note that for backward compatibility during this transition
%       period for outside developers, it is best to make both the code and
%       data directories lie within the same parent directory.
GENERAL; Main_Code_Directory; \ratter\ExperPort;
GENERAL; Main_Data_Directory; \ratter\SoloData;


%     This setting isn't important or solid just yet.
GENERAL; Sound_Directory;     \ratter\ExperPort\Sounds;

%     It's strongly advised that all labs have this setting set to 0 until
%       further notice. This controls the updating loop in Dispatcher that
%       polls the state machine server for events. That iteration can be
%       executed as a loop of code with pauses (use_timers 0) or as a
%       timer callback (use_timers 1). Although there are advantages to the
%       timer-based system, it currently results in difficulties debugging
%       and potentially problematic race conditions between experiments.
%       Although the timer-based system likely still works, we currently
%       test code only on the loop-based system.
GENERAL; use_timers;            0

%     Here is our script hook configuration.
%     In our lab, we record all rat sessions. When the experiment is
%       started, the On_Run script below is started and passed the
%       experimenter name, rat name, and protocol name. Our script
%       (directory Rigscripts available upon request) takes these arguments
%       and the argument listed below (the video directory) and starts
%       recording video automatically, then uploads the video to our
%       central server when the recorder (VLC) is killed by the one-line
%       On_End script listed below. More documentation in
%       Settings_Default.conf
AUX_SCRIPT; Disable_Aux_Scripts;	0;	% ALL HOOKS ALWAYS OFF unless this is 0
AUX_SCRIPT; Enable_On_Run_Script;	1;	% 1: dispatcher runclick->start script below
AUX_SCRIPT; On_Run_Script;          \ratter\RigScripts\Record_Rat_Video.bat; % filename of script to run, or nothing (empty string)
AUX_SCRIPT; On_Run_Args;            \ratter\Video;   % arguments to pass to the script above
AUX_SCRIPT; Enable_On_End_Script;   1;	% 1: dispatcher endclick->start script below
AUX_SCRIPT; On_End_Script;          \ratter\RigScripts\Stop_Video_Recording.bat;       % filename of script to run, or nothing (empty string)
AUX_SCRIPT; On_End_Args;            ;   % arguments to pass to the script above

%     Our pokesplot has a handy feature: the capacity to run a script when
%       the plot is clicked, for data analysis. We use this to replay
%       interesting-looking portions of an experiment. Curious about some
%       behavior on the pokes plot? Just click on a spot and the video will
%       instantly replay from that moment through the end of that trial!
%     Our scripts ("Rigscripts") are available on request.
AUX_SCRIPT; Enable_On_PPClick_Script; 1; % 1: run script below when pokes plot position is clicked and toggle on pokesplot is on
AUX_SCRIPT; On_PPClick_Script; \ratter\Play_Rat_Video_Segment.bat;    % filename of script to run
AUX_SCRIPT; On_PPClick_Args;   \ratter\Video;      % arguments to pass to the script above


%     In Brody lab, our experimental rigs all use the RTLSM (Real-Time
%       Linux State Machine) to control the finite state machine and rat
%       interface hardware. This horribly-named (historical reasons)
%       setting results in exactly that. This is probably the value
%       everyone else will be using - except that if one is running the
%       software on a personal computer for testing, data analysis, etc.,
%       the setting should be 3 to use the emulator / fake rig,
%       SoftSMMarkII.
RIGS; fake_rp_box;          2;

%     Most of our rigs have the following output channels.
%     The digital outputs work as a bitfield so that they can be added
%       together into an integer that specifies the state of all output
%       lines.
%     You can adjust the values so that they suit your hardware arrangment.
%     You can also add more channels, but this settings group is special in that
%       that every setting in it is assumed to be an output channel, so
%       don't add settings that aren't output channels (e.g. don't add a
%       numLines setting to this group - use a different group name).
%     See Settings_Default.conf for more documentation.
DIOLINES; center1water;         1;        % 2^0     % on rigs without center water delivery, we set this to NaN in the custom file
DIOLINES; center1led;           2;        % 2^1
DIOLINES; left1water;           4;        % 2^2
DIOLINES; left1led;             8;        % 2^3
DIOLINES; right1water;          16;       % 2^4
DIOLINES; right1led;            32;       % 2^5


%     This is where we keep our experimental data and settings files, and
%       (for now) our video. You'll want your own data repository.
CVS; CVSROOT_STRING; :ext:brodylab@brodylab:/cvs; % when blank, cvs is not used

%     --------------------------------------------------------------
%     --------------------------------------------------------------








%     --------------------------------------------------------------
%     The settings file examples below illustrate the way we've arranged
%       multiple rigs (3) to be controlled by one RTLSM on one Linux
%       machine. You needn't concern yourself with them if you don't intend
%       to use this multi-box setup.
%     --------------------------------------------------------------


%     --------------------------------------------------------------
%     --------------------------------------------------------------
%     Example for rig 7    (first in a column)
%     wall #2: 3 XP and 1 Linux (w/ RTLSM) machines per 3 boxes
%     --------------------------------------------------------------
%     --------------------------------------------------------------

DO_;          INCLUDE; Settings\Settings_BrodylabRig.conf
RIGS;         state_machine_server;    brodyrigrt07;
RIGS;         sound_machine_server;    brodyrigrt07;


%     For 1XP&1RTLSM computer per box, the next few settings are defaults.
%     On this wall, however, they can be slightly different - but not for
%       the first rig in each column (i.e. first rig per RTLSM machine).
%     The documentation in Settings_Default.conf is pretty good, but see
%       the next examples for more explanation, too.
RIGS;           server_slot;     0;   % default
RIGS;           card_slot;       0;   % default
INPUTLINES_MISC;offset;          0;   % default
DIOLINES_MISC;	offset;          0;   % default

%     Without RIGS;lone_rig set to 1, we'll now be using only a subset of
%       the output lines (0-5 in this case because we have 6 channels
%       defined and our DIOLINES_MISC;offset is still 0, the default).


%     --------------------------------------------------------------
%     --------------------------------------------------------------
%     Example for rig 8    (second in a column)
%     wall #2
%     --------------------------------------------------------------
%     --------------------------------------------------------------

DO_;          INCLUDE; Settings\Settings_BrodylabRig.conf
RIGS;         state_machine_server;    brodyrigrt07;
RIGS;         sound_machine_server;    brodyrigrt07;

%     This machine will use the second slot (slot 1) in the RTLSM server on
%       the same Linux machine as rig 7, and the second sound card (slot 1)
%       on that Linux machine as well.
RIGS;           server_slot;     1;   % default
RIGS;           card_slot;       1;   % default

%     On that same RTLSM server, we will now be using input lines 4-6
%       for center, left, and right poke state, since lines 1-3 on
%       the RTLSM on brodyrigrt07 are already taken by rig 7.
%     We still have 6 output lines defined, but now we set an offset of 6,
%       so we'll be using lines 6-11, as 0-5 are taken by rig 7.
INPUTLINES_MISC;offset;          3;   % default
DIOLINES_MISC;	offset;          6;   % default


%     --------------------------------------------------------------
%     --------------------------------------------------------------
%     Example for rig 9    (third in a column)
%     wall #2
%     --------------------------------------------------------------
%     --------------------------------------------------------------

DO_;          INCLUDE; Settings\Settings_BrodylabRig.conf
RIGS;         state_machine_server;    brodyrigrt07;
RIGS;         sound_machine_server;    brodyrigrt07;

%     This machine will use the third slot (slot 2) in the RTLSM server on
%       the same Linux machine as rigs 7 and 8, and the third sound card
%       (slot 2) on that Linux machine as well.
RIGS;           server_slot;     2;   % default
RIGS;           card_slot;       2;   % default

%     On that same RTLSM server, we will now be using input lines 7-9
%       for center, left, and right poke state, since lines 1-6 on
%       the RTLSM on brodyrigrt07 are already taken by rigs 7 and 8.
%     We still have 6 output lines defined, but now we set an offset of 12,
%       so we'll be using lines 12-17, as 0-11 are taken by rigs 7 and 8.
INPUTLINES_MISC;offset;          6;   % default
DIOLINES_MISC;	offset;          12;   % default




---Rig 10------------------------------
DO_;                INCLUDE; Settings\Settings_BrodylabRig.conf
RIGS;               state_machine_server;    brodyrigrt10;
RIGS;               sound_machine_server;    brodyrigrt10;
RIGS;               server_slot;    0;
RIGS;               card_slot;      0;
INPUTLINES_MISC;    offset;         0;
DIOLINES_MISC;      offset;         0;
----------------------------------------
---Rig 11------------------------------
DO_;                INCLUDE; Settings\Settings_BrodylabRig.conf
RIGS;               state_machine_server;    brodyrigrt10;
RIGS;               sound_machine_server;    brodyrigrt10;
RIGS;               server_slot;    1;
RIGS;               card_slot;      1;
INPUTLINES_MISC;    offset;         3;
DIOLINES_MISC;      offset;         6;
----------------------------------------
---Rig 12------------------------------
DO_;                INCLUDE; Settings\Settings_BrodylabRig.conf
RIGS;               state_machine_server;    brodyrigrt10;
RIGS;               sound_machine_server;    brodyrigrt10;
RIGS;               server_slot;    2;
RIGS;               card_slot;      2;
INPUTLINES_MISC;    offset;         6;
DIOLINES_MISC;      offset;         12;
----------------------------------------
