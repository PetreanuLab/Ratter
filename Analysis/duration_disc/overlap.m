function [] = overlap()
  
% $$$   
% $$$ 300 and 800ms
% $$$ *** LOGDIFF = 1.00    *** LOGDIFF = 0.95    *** LOGDIFF = 0.90    *** LOGDIFF = 0.85    *** LOGDIFF = 0.80    *** LOGDIFF = 0.75    *** LOGDIFF = 0.70    *** LOGDIFF = 0.65    *** LOGDIFF = 0.60    
% $$$ best_matrix =
% $$$ 
% $$$     1.0000  200.0000  600.0000  100.0000  300.0000    0.1491
% $$$     0.9500  200.0000  600.0000  100.0000  300.0000    0.1948
% $$$     0.9000  200.0000  600.0000  100.0000  300.0000    0.2401
% $$$     0.8500  200.0000  600.0000  100.0000  300.0000    0.2849
% $$$     0.8000  200.0000  600.0000  100.0000  300.0000    0.3292
% $$$     0.7500  200.0000  600.0000  100.0000  300.0000    0.3732
% $$$     0.7000  200.0000  600.0000  100.0000  300.0000    0.4167
% $$$     0.6500  200.0000  600.0000  100.0000  300.0000    0.4599
% $$$     0.6000  200.0000  600.0000  100.0000  300.0000    0.5027
% $$$ 
% $$$ 
% $$$ 
% $$$ 
% $$$ 400 and 800ms
% $$$ *** LOGDIFF = 1.00    *** LOGDIFF = 0.95    *** LOGDIFF = 0.90    *** LOGDIFF = 0.85    *** LOGDIFF = 0.80    *** LOGDIFF = 0.75    *** LOGDIFF = 0.70    *** LOGDIFF = 0.65    *** LOGDIFF = 0.60    
% $$$ best_matrix =
% $$$ 
% $$$     1.0000  200.0000  600.0000  100.0000  300.0000    0.0174
% $$$     0.9500  200.0000  600.0000  100.0000  300.0000    0.0703
% $$$     0.9000  200.0000  600.0000  100.0000  300.0000    0.1225
% $$$     0.8500  200.0000  600.0000  100.0000  300.0000    0.1743
% $$$     0.8000  200.0000  600.0000  100.0000  300.0000    0.2255
% $$$     0.7500  200.0000  600.0000  100.0000  300.0000    0.2762
% $$$     0.7000  200.0000  600.0000  100.0000  300.0000    0.3265
% $$$     0.6500  200.0000  600.0000  100.0000  300.0000    0.3763
% $$$     0.6000  200.0000  600.0000  100.0000  300.0000    0.4258
% $$$ 
% $$$ 
% $$$ 
% $$$ 
% $$$ 300 and 700ms
% $$$ *** LOGDIFF = 1.00    *** LOGDIFF = 0.95    *** LOGDIFF = 0.90    *** LOGDIFF = 0.85    *** LOGDIFF = 0.80    *** LOGDIFF = 0.75    *** LOGDIFF = 0.70    *** LOGDIFF = 0.65    *** LOGDIFF = 0.60    
% $$$ best_matrix =
% $$$ 
% $$$     1.0000  200.0000  600.0000  100.0000  300.0000    0.2040
% $$$     0.9500  200.0000  600.0000  100.0000  300.0000    0.2468
% $$$     0.9000  200.0000  600.0000  100.0000  300.0000    0.2892
% $$$     0.8500  200.0000  600.0000  100.0000  300.0000    0.3311
% $$$     0.8000  200.0000  600.0000  100.0000  300.0000    0.3726
% $$$     0.7500  200.0000  600.0000  100.0000  300.0000    0.4137
% $$$     0.7000  200.0000  600.0000  100.0000  300.0000    0.4544
% $$$     0.6500  200.0000  600.0000  100.0000  300.0000    0.4948
% $$$     0.6000  200.0000  600.0000  100.0000  300.0000    0.5348

  
  a=200:50:500;
  c=100:50:200;
  logdiffs = 1.0:-0.05:0.60;
  endpoints =[ 300 800; 400 800; 300 700;];

for s = 1:rows(endpoints)
  
  best_matrix = [];
  s1 = endpoints(s,1); s2 = endpoints(s,2);
  mp = sqrt(s1*s2);
  fprintf(1, '\n\n\n%i and %ims\n',s1,s2);
for m = 1:length(logdiffs)
  lx=logdiffs(m);
  [s1 s2] = calc_pair('d', mp, lx);
  fprintf(1,'*** LOGDIFF = %1.2f    ', lx);
  overlap_matrix=[];
  
for i = 1:length(a)
  ax = a(i);
  b = ax+100:50:600;
%  fprintf(1,'a = %i \n',ax);
  for j = 1:length(b)
    bx = b(j);
%      fprintf(1,'\tb = %i \n',bx);
    for k = 1:length(c)
      cx = c(k);
      d=cx+100:50:300;
      for l = 1:length(d)
        dx = d(l);
        p = predictability(ax,bx,cx,dx,s1,s2);
        overlap_matrix = [overlap_matrix; ax bx cx dx p];       
      end;
    end;
  end;
end;

m_last = overlap_matrix(:,5);
i = find(m_last == max(m_last));
best_matrix = [ best_matrix; ...
                lx overlap_matrix(i,:) ];

end;
best_matrix

end;

